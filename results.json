{
	"kics_version": "v1.7.13",
	"files_scanned": 2,
	"lines_scanned": 139,
	"files_parsed": 2,
	"lines_parsed": 130,
	"lines_ignored": 9,
	"files_failed_to_scan": 0,
	"queries_total": 70,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"HIGH": 0,
		"INFO": 2,
		"LOW": 7,
		"MEDIUM": 13,
		"TRACE": 0
	},
	"total_counter": 22,
	"total_bom_resources": 0,
	"start": "2024-04-04T20:10:00.652963393Z",
	"end": "2024-04-04T20:10:03.012009105Z",
	"paths": [
		"/path"
	],
	"queries": [
		{
			"query_name": "Apt Get Install Pin Version Not Defined",
			"query_id": "965a08d7-ef86-4f14-8792-4a3b2098937e",
			"query_url": "https://docs.docker.com/develop/develop-images/dockerfile_best-practices/",
			"severity": "MEDIUM",
			"platform": "Dockerfile",
			"cwe": "1357",
			"category": "Supply-Chain",
			"experimental": false,
			"description": "When installing a package, its pin version should be defined",
			"description_id": "e0e1edad",
			"files": [
				{
					"file_name": "../../path/Dockerfile",
					"similarity_id": "a8cb6893cceff10cb9201ad55d3ef22f05a6ec9a52292fd072aaa5cd3f655c79",
					"line": 39,
					"issue_type": "MissingAttribute",
					"search_key": "FROM={{debian:stable}}.RUN={{useradd -m -d /opt/gophish -s /bin/bash app \u0026\u0026     apt-get update \u0026\u0026     apt-get install --no-install-recommends -y jq libcap2-bin \u0026\u0026     apt-get clean \u0026\u0026     rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*}}",
					"search_line": -1,
					"search_value": "jq",
					"expected_value": "Package 'jq' has version defined",
					"actual_value": "Package 'jq' does not have version defined"
				},
				{
					"file_name": "../../path/Dockerfile",
					"similarity_id": "866a98861e0470f12120c372fc6bacc9a8330ca429cd48ccb8973acb92f66a0d",
					"line": 4,
					"issue_type": "MissingAttribute",
					"search_key": "FROM={{node:latest AS build-js}}.RUN={{npm install gulp gulp-cli -g \u0026\u0026 apt-get update \u0026\u0026 apt-get install -y git}}",
					"search_line": -1,
					"search_value": "git",
					"expected_value": "Package 'git' has version defined",
					"actual_value": "Package 'git' does not have version defined"
				},
				{
					"file_name": "../../path/Dockerfile",
					"similarity_id": "f44dc43334e7850cb9d6cf28bc9e514997fe1ba88832e386f227d0dccffad148",
					"line": 39,
					"issue_type": "MissingAttribute",
					"search_key": "FROM={{debian:stable}}.RUN={{useradd -m -d /opt/gophish -s /bin/bash app \u0026\u0026     apt-get update \u0026\u0026     apt-get install --no-install-recommends -y jq libcap2-bin \u0026\u0026     apt-get clean \u0026\u0026     rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*}}",
					"search_line": -1,
					"search_value": "libcap2-bin",
					"expected_value": "Package 'libcap2-bin' has version defined",
					"actual_value": "Package 'libcap2-bin' does not have version defined"
				}
			]
		},
		{
			"query_name": "Healthcheck Not Set",
			"query_id": "698ed579-b239-4f8f-a388-baa4bcb13ef8",
			"query_url": "https://docs.docker.com/compose/compose-file/compose-file-v3/#healthcheck",
			"severity": "MEDIUM",
			"platform": "DockerCompose",
			"category": "Availability",
			"experimental": false,
			"description": "Check containers periodically to see if they are running properly.",
			"description_id": "449b7c5c",
			"files": [
				{
					"file_name": "../../path/docker-compose.yml",
					"similarity_id": "6d60c98aadbf0b64829a7dffa25aaf176ac32b3f6efdcb24ece32527190df8c8",
					"line": 24,
					"issue_type": "MissingAttribute",
					"search_key": "services.mysql",
					"search_line": 24,
					"search_value": "",
					"expected_value": "Healthcheck should be defined.",
					"actual_value": "Healthcheck is not defined."
				},
				{
					"file_name": "../../path/docker-compose.yml",
					"similarity_id": "6b30bb06bc338e81bb3dd1e527dc819196ef17a9e79136f37717d156623c8b08",
					"line": 48,
					"issue_type": "MissingAttribute",
					"search_key": "services.gophish",
					"search_line": 48,
					"search_value": "",
					"expected_value": "Healthcheck should be defined.",
					"actual_value": "Healthcheck is not defined."
				},
				{
					"file_name": "../../path/docker-compose.yml",
					"similarity_id": "2bd01ab866970477d778f691fa8cd60568ecfd5e611dd250012396a425e796ca",
					"line": 5,
					"issue_type": "MissingAttribute",
					"search_key": "services.gophish-proxy",
					"search_line": 5,
					"search_value": "",
					"expected_value": "Healthcheck should be defined.",
					"actual_value": "Healthcheck is not defined."
				}
			]
		},
		{
			"query_name": "Image Version Using 'latest'",
			"query_id": "f45ea400-6bbe-4501-9fc7-1c3d75c32067",
			"query_url": "https://docs.docker.com/develop/dev-best-practices/",
			"severity": "MEDIUM",
			"platform": "Dockerfile",
			"cwe": "1357",
			"category": "Supply-Chain",
			"experimental": false,
			"description": "When building images, always tag them with useful tags which codify version information, intended destination (prod or test, for instance), stability, or other information that is useful when deploying the application in different environments. Do not rely on the automatically-created latest tag",
			"description_id": "22f535ec",
			"files": [
				{
					"file_name": "../../path/Dockerfile",
					"similarity_id": "224f2d999e88bbf7d7578ad9a1e03a0052129874f68cd00e7135f6da344658fd",
					"line": 11,
					"issue_type": "IncorrectValue",
					"search_key": "FROM={{golang:latest AS build-golang}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "FROM golang:latest:'version' where version should not be 'latest'",
					"actual_value": "FROM golang:latest'"
				},
				{
					"file_name": "../../path/Dockerfile",
					"similarity_id": "0c36b91658151db98fea4859a6e000d84572a8e5780e2115f96982d87b8fa6e9",
					"line": 2,
					"issue_type": "IncorrectValue",
					"search_key": "FROM={{node:latest AS build-js}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "FROM node:latest:'version' where version should not be 'latest'",
					"actual_value": "FROM node:latest'"
				}
			]
		},
		{
			"query_name": "Memory Not Limited",
			"query_id": "bb9ac4f7-e13b-423d-a010-c74a1bfbe492",
			"query_url": "https://docs.docker.com/compose/compose-file/compose-file-v3/#resources",
			"severity": "MEDIUM",
			"platform": "DockerCompose",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory limits should be defined for each container. This prevents potential resource exhaustion by ensuring that containers consume not more than the designated amount of memory",
			"description_id": "8fcb9f7d",
			"files": [
				{
					"file_name": "../../path/docker-compose.yml",
					"similarity_id": "da2ebf0b2cfa7ba7e77d6448e6a3b5ed6830408eeebb8b1baa4546a6eba5f7b7",
					"line": 5,
					"issue_type": "MissingAttribute",
					"search_key": "services.gophish-proxy",
					"search_line": 5,
					"search_value": "",
					"expected_value": "'deploy.resources.limits.memory' should be defined",
					"actual_value": "'deploy' is not defined"
				},
				{
					"file_name": "../../path/docker-compose.yml",
					"similarity_id": "d4c44ab127b734413abde0dae8bb51a88b9c4b26ddace2e65cd05434e5f4cc61",
					"line": 24,
					"issue_type": "MissingAttribute",
					"search_key": "services.mysql",
					"search_line": 24,
					"search_value": "",
					"expected_value": "'deploy.resources.limits.memory' should be defined",
					"actual_value": "'deploy' is not defined"
				},
				{
					"file_name": "../../path/docker-compose.yml",
					"similarity_id": "262634b1a7ca941433d9e2e625a10d7b16477b6efd8bd805d5c77334eea3d12d",
					"line": 48,
					"issue_type": "MissingAttribute",
					"search_key": "services.gophish",
					"search_line": 48,
					"search_value": "",
					"expected_value": "'deploy.resources.limits.memory' should be defined",
					"actual_value": "'deploy' is not defined"
				}
			]
		},
		{
			"query_name": "NPM Install Command Without Pinned Version",
			"query_id": "e36d8880-3f78-4546-b9a1-12f0745ca0d5",
			"query_url": "https://docs.docker.com/engine/reference/builder/#run",
			"severity": "MEDIUM",
			"platform": "Dockerfile",
			"cwe": "1357",
			"category": "Supply-Chain",
			"experimental": false,
			"description": "Check if packages installed by npm are pinning a specific version.",
			"description_id": "8bd60033",
			"files": [
				{
					"file_name": "../../path/Dockerfile",
					"similarity_id": "a1a485acd598488fe2b628cf6a6702c8e10ab3e5f61ba803b457c88b0b38fb3b",
					"line": 4,
					"issue_type": "IncorrectValue",
					"search_key": "FROM={{node:latest AS build-js}}.{{RUN npm install gulp gulp-cli -g \u0026\u0026 apt-get update \u0026\u0026 apt-get install -y git}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "'RUN npm install gulp gulp-cli -g \u0026\u0026 apt-get update \u0026\u0026 apt-get install -y git' uses npm install with a pinned version",
					"actual_value": "'RUN npm install gulp gulp-cli -g \u0026\u0026 apt-get update \u0026\u0026 apt-get install -y git' does not uses npm install with a pinned version"
				}
			]
		},
		{
			"query_name": "Privileged Ports Mapped In Container",
			"query_id": "bc2908f3-f73c-40a9-8793-c1b7d5544f79",
			"query_url": "https://docs.docker.com/compose/compose-file/compose-file-v3/#cap_add-cap_drop",
			"severity": "MEDIUM",
			"platform": "DockerCompose",
			"category": "Networking and Firewall",
			"experimental": false,
			"description": "Privileged ports (1 to 1023) should not be mapped. Also you should drop net_bind_service linux capability from the container unless you absolutely need to use priviledged ports.",
			"description_id": "686dd55f",
			"files": [
				{
					"file_name": "../../path/docker-compose.yml",
					"similarity_id": "c88677e2d1b153f4c7b86483d94aa67c00af7cfc7f83256cfaaae259bc349ee4",
					"line": 19,
					"issue_type": "IncorrectValue",
					"search_key": "services.gophish-proxy.ports",
					"search_line": 19,
					"search_value": "",
					"expected_value": "Docker compose file to have 'ports' attribute not set to privileged ports (\u003c1024).",
					"actual_value": "Docker compose file has 'ports' attribute set to privileged ports (\u003c1024)."
				}
			]
		},
		{
			"query_name": "Container Capabilities Unrestricted",
			"query_id": "ce76b7d0-9e77-464d-b86f-c5c48e03e22d",
			"query_url": "https://docs.docker.com/compose/compose-file/compose-file-v3/#cap_add-cap_drop",
			"severity": "LOW",
			"platform": "DockerCompose",
			"category": "Resource Management",
			"experimental": false,
			"description": "Some capabilities are not needed in certain (or any) containers. Make sure that you only add capabilities that your container needs. Drop unnecessary capabilities as well.",
			"description_id": "1ddab108",
			"files": [
				{
					"file_name": "../../path/docker-compose.yml",
					"similarity_id": "f985d01ea6bf45c1e220d83eb0ab58ecf677db2157f92aa079052590e102b432",
					"line": 11,
					"issue_type": "IncorrectValue",
					"search_key": "services.gophish-proxy.cap_add",
					"search_line": 11,
					"search_value": "",
					"expected_value": "Make sure you only add the necessary capabilities to your container.",
					"actual_value": "Docker compose file has 'cap_add' attribute."
				},
				{
					"file_name": "../../path/docker-compose.yml",
					"similarity_id": "de49584b9c46dbc4bb64e8c27f6840a4cf0c850529b362ead386b1b02e892af3",
					"line": 52,
					"issue_type": "IncorrectValue",
					"search_key": "services.gophish.cap_add",
					"search_line": 52,
					"search_value": "",
					"expected_value": "Make sure you only add the necessary capabilities to your container.",
					"actual_value": "Docker compose file has 'cap_add' attribute."
				},
				{
					"file_name": "../../path/docker-compose.yml",
					"similarity_id": "5acc8b88f6683f6fa0bd1331c13b3115d09eb45e58e6c54e909ac114aa2e7ee3",
					"line": 30,
					"issue_type": "IncorrectValue",
					"search_key": "services.mysql.cap_add",
					"search_line": 30,
					"search_value": "",
					"expected_value": "Make sure you only add the necessary capabilities to your container.",
					"actual_value": "Docker compose file has 'cap_add' attribute."
				}
			]
		},
		{
			"query_name": "Cpus Not Limited",
			"query_id": "6b610c50-99fb-4ef0-a5f3-e312fd945bc3",
			"query_url": "https://docs.docker.com/compose/compose-file/compose-file-v3/#resources",
			"severity": "LOW",
			"platform": "DockerCompose",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "d58d94a1",
			"files": [
				{
					"file_name": "../../path/docker-compose.yml",
					"similarity_id": "60b3f68df0390a8cee2aa1bacaa27041a9a7b8668fc00e2b218ee7eeffe52299",
					"line": 24,
					"issue_type": "MissingAttribute",
					"search_key": "services.mysql",
					"search_line": 24,
					"search_value": "",
					"expected_value": "'deploy.resources.limits.cpus' should be defined",
					"actual_value": "'deploy' is not defined"
				},
				{
					"file_name": "../../path/docker-compose.yml",
					"similarity_id": "767a54e5d07b684c99b6cb8856c3c1f4049cfe8d14a0649d409bc4a7f9d992b6",
					"line": 5,
					"issue_type": "MissingAttribute",
					"search_key": "services.gophish-proxy",
					"search_line": 5,
					"search_value": "",
					"expected_value": "'deploy.resources.limits.cpus' should be defined",
					"actual_value": "'deploy' is not defined"
				},
				{
					"file_name": "../../path/docker-compose.yml",
					"similarity_id": "021fc84415cc0aa5e068c4e4ff047b3a02fe20cb4845d290ad51e023635f7aa2",
					"line": 48,
					"issue_type": "MissingAttribute",
					"search_key": "services.gophish",
					"search_line": 48,
					"search_value": "",
					"expected_value": "'deploy.resources.limits.cpus' should be defined",
					"actual_value": "'deploy' is not defined"
				}
			]
		},
		{
			"query_name": "Healthcheck Instruction Missing",
			"query_id": "b03a748a-542d-44f4-bb86-9199ab4fd2d5",
			"query_url": "https://docs.docker.com/engine/reference/builder/#healthcheck",
			"severity": "LOW",
			"platform": "Dockerfile",
			"cwe": "710",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Ensure that HEALTHCHECK is being used. The HEALTHCHECK instruction tells Docker how to test a container to check that it is still working",
			"description_id": "426121ee",
			"files": [
				{
					"file_name": "../../path/Dockerfile",
					"similarity_id": "95c6773ba7fb54047bdb64e0dd55bae705529b95d8a95d47a451cfc3dd540041",
					"line": 37,
					"issue_type": "MissingAttribute",
					"search_key": "FROM={{debian:stable}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "Dockerfile should contain instruction 'HEALTHCHECK'",
					"actual_value": "Dockerfile doesn't contain instruction 'HEALTHCHECK'"
				}
			]
		},
		{
			"query_name": "APT-GET Not Avoiding Additional Packages",
			"query_id": "7384dfb2-fcd1-4fbf-91cd-6c44c318c33c",
			"query_url": "https://docs.docker.com/engine/reference/builder/#run",
			"severity": "INFO",
			"platform": "Dockerfile",
			"cwe": "710",
			"category": "Supply-Chain",
			"experimental": false,
			"description": "Check if any apt-get installs don't use '--no-install-recommends' flag to avoid installing additional packages.",
			"description_id": "2e92d18c",
			"files": [
				{
					"file_name": "../../path/Dockerfile",
					"similarity_id": "ce1b2e682c8eebd76d809b5c1a3467c3c1e7844ce2e2e82cc2cccf0e54f2b3ce",
					"line": 4,
					"issue_type": "IncorrectValue",
					"search_key": "FROM={{node:latest AS build-js}}.{{RUN npm install gulp gulp-cli -g \u0026\u0026 apt-get update \u0026\u0026 apt-get install -y git}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "'RUN npm install gulp gulp-cli -g \u0026\u0026 apt-get update \u0026\u0026 apt-get install -y git' uses '--no-install-recommends' flag to avoid installing additional packages",
					"actual_value": "'RUN npm install gulp gulp-cli -g \u0026\u0026 apt-get update \u0026\u0026 apt-get install -y git' does not use '--no-install-recommends' flag to avoid installing additional packages"
				}
			]
		},
		{
			"query_name": "Apt Get Install Lists Were Not Deleted",
			"query_id": "df746b39-6564-4fed-bf85-e9c44382303c",
			"query_url": "https://docs.docker.com/develop/develop-images/dockerfile_best-practices/",
			"severity": "INFO",
			"platform": "Dockerfile",
			"cwe": "459",
			"category": "Supply-Chain",
			"experimental": false,
			"description": "After using apt-get install, it is needed to delete apt-get lists",
			"description_id": "4236a50c",
			"files": [
				{
					"file_name": "../../path/Dockerfile",
					"similarity_id": "c8537ad7ed2defc4b3db5e55c98363e392d8aeb176c44183662ea30f625ed3ba",
					"line": 4,
					"issue_type": "IncorrectValue",
					"search_key": "FROM={{node:latest AS build-js}}.RUN={{npm install gulp gulp-cli -g \u0026\u0026 apt-get update \u0026\u0026 apt-get install -y git}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "After using apt-get install, the apt-get lists should be deleted",
					"actual_value": "After using apt-get install, the apt-get lists were not deleted"
				}
			]
		}
	]
}
